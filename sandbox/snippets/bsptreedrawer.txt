	} else if (drawMode == 'HiddenLineBSPTree') {
		if (materials === undefined || materials === null) {
			materials = new JSM.Materials ();
		}

		var bspTree = new JSM.BSPTree ();
		JSM.AddBodyToBSPTree (body, bspTree);

		JSM.TraverseBSPTreeForEyePosition (bspTree, camera.eye, function (node) {
			projected = GetProjectedPolygon2 (node.polygon);
			color = 0xcc0000;
			drawer.DrawPolygon (projected, color, true);
		});
		
		/*
		var existingIndex;
		orderedPolygons = [];
		JSM.TraverseBSPTreeForEyePosition (bspTree, camera.eye, function (node) {
			color = 0xcc0000;
			existingIndex = orderedPolygons.indexOf (node.userData.originalPolygon);
			if (existingIndex == -1) {
				//orderedPolygons.slice (existingIndex, 1);
				orderedPolygons.push (node.userData.originalPolygon);
			}
		});

		for (i = 0; i < orderedPolygons.length; i++) {
			polygon = body.GetPolygon (orderedPolygons[i]);
			projected = GetProjectedPolygon (polygon);
			materialIndex = polygon.GetMaterialIndex ();
			color = materials.GetMaterial (materialIndex).diffuse;
			drawer.DrawPolygon (projected, color, true);
		}
		*/
