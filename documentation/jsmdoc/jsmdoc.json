{
	"modules" : {
		"Core" : {
			"functions" : {
				"IsZero" : {
					"description" : "Determines if the given value is near zero. Uses epsilon for comparison."
				},
				"IsPositive" : {
					"description" : "Determines if the given value is positive. Uses epsilon for comparison."
				},
				"IsNegative" : {
					"description" : "Determines if the given value is negative. Uses epsilon for comparison."
				},
				"IsLower" : {
					"description" : "Determines if a value is lower than an other. Uses epsilon for comparison."
				},
				"IsGreater" : {
					"description" : "Determines if a value is greater than an other. Uses epsilon for comparison."
				},
				"IsEqual" : {
					"description" : "Determines if two values are equal. Uses epsilon for comparison."
				},
				"IsEqualWithEps" : {
					"description" : "Determines if two values are equal. Uses the given epsilon for comparison."
				},
				"IsLowerOrEqual" : {
					"description" : "Determines if a value is lower or equal to an other. Uses epsilon for comparison."
				},
				"IsGreaterOrEqual" : {
					"description" : "Determines if a value is greater or equal to an other. Uses epsilon for comparison."
				},
				"Minimum" : {
					"description" : "Returns the minimum of two values. Uses epsilon for comparison."
				},
				"Maximum" : {
					"description" : "Returns the maximum of two values. Uses epsilon for comparison."
				},
				"ArcSin" : {
					"description" : "Calculates the arcus sinus value."
				},
				"ArcCos" : {
					"description" : "Calculates the arcus cosinus value."
				},
				"RandomInt" : {
					"description" : "Generates a random integer between two integers."
				},
				"SeededRandomInt" : {
					"description" : "Generates a random integer between two integers. A seed number can be specified."
				},
				"ValueOrDefault" : {
					"description" : "Returns the given value, or a default if it is undefined."
				},
				"Assert" : {
					"description" : "Shows up an alert with the given message is the condition is false."
				}
			},
			"classes" : {
				"Timer" : {
					"description" : "Utility class for time measure.",
					"functions" : {
						"Start" : {
							"description" : "Starts the timer."
						},
						"Stop" : {
							"description" : "Stops the timer."
						},
						"Result" : {
							"description" : "Returns the time between start and stop;."
						}
					}
				}
			}
		},
		"Geometry" : {
			"functions" : {
				"MatrixDeterminant2x2" : {
					"description" : "Calculates the determinant of a 2x2 matrix."
				},
				"MatrixDeterminant3x3" : {
					"description" : "Calculates the determinant of a 3x3 matrix."
				},
				"MatrixDeterminant4x4" : {
					"description" : "Calculates the determinant of a 4x4 matrix."
				},
				"VectorMatrixMultiply4x4" : {
					"description" : "Multiplies a vector with a matrix.",
					"parameters" : [
						["vector", "number[4]", "the vector"],
						["matrix", "number[16]", "the matrix"]
					],
					"returns" : [
						["number[4]", "the vector result of the multiplication"]
					]
				},
				"MatrixMultiply4x4" : {
					"description" : "Multiplies a two matrices."
				}
			},
			"classes" : {
				"Coord2D" : {
					"description" : "Represents a 2D coordinate.",
					"functions" : {
						"Set" : {
							"description" : "Sets the coordinate."
						},
						"ToString" : {
							"description" : "Converts the coordinate values to string."
						},
						"Clone" : {
							"description" : "Clones the coordinate."
						}
					}
				},
				"PolarCoord" : {
					"description" : "Represents a 2D polar coordinate.",
					"functions" : {
						"Set" : {
							"description" : "Sets the coordinate."
						},
						"ToString" : {
							"description" : "Converts the coordinate values to string."
						},
						"Clone" : {
							"description" : "Clones the coordinate."
						}
					}
				},
				"Coord" : {
					"description" : "Represents a 3D coordinate.",
					"functions" : {
						"Set" : {
							"description" : "Sets the coordinate."
						},
						"ToString" : {
							"description" : "Converts the coordinate values to string."
						},
						"Clone" : {
							"description" : "Clones the coordinate."
						}
					}
				},
				"SphericalCoord" : {
					"description" : "Represents a 3D spherical coordinate.",
					"functions" : {
						"Set" : {
							"description" : "Sets the coordinate."
						},
						"ToString" : {
							"description" : "Converts the coordinate values to string."
						},
						"Clone" : {
							"description" : "Clones the coordinate."
						}
					}
				},
				"Vector2D" : {
					"description" : "Same as Coord2D."
				},
				"Vector" : {
					"description" : "Same as Coord."
				}
			}
		},
		"Modeler" : {
		},
		"Extras" : {
		},
		"Viewer" : {
		}
	}
}
