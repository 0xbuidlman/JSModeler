/* JSModeler 0.36 - http://www.github.com/kovacsv/JSModeler */ 'use strict';JSM.ResizeImageToPowerOfTwoSides=function(a){if(JSM.IsPowerOfTwo(a.width)&&!JSM.IsPowerOfTwo(a.height))return a;var b=JSM.NextPowerOfTwo(a.width),d=JSM.NextPowerOfTwo(a.height),c=document.createElement("canvas");c.width=b;c.height=d;c=c.getContext("2d");c.drawImage(a,0,0,b,d);return c.getImageData(0,0,b,d)};
JSM.ConvertBodyToThreeMeshes=function(a,b,d){var c={textureLoadedCallback:null,hasConvexPolygons:!1,doubleSided:!0};void 0!==d&&null!==d&&(c.textureLoadedCallback=JSM.ValueOrDefault(d.textureLoadedCallback,c.textureLoadedCallback),c.hasConvexPolygons=JSM.ValueOrDefault(d.hasConvexPolygons,c.hasConvexPolygons),c.doubleSided=JSM.ValueOrDefault(d.doubleSided,c.doubleSided));var f=[],e=null;JSM.ExplodeBodyToTriangles(a,b,{hasConvexPolygons:c.hasConvexPolygons,onGeometryStart:function(){e=new THREE.Geometry},
onGeometryEnd:function(a){var b=null!==a.texture,d=1!==a.opacity,A=new THREE.MeshPhongMaterial({ambient:a.ambient,color:a.diffuse,specular:a.specular,shininess:a.shininess});c.doubleSided&&(A.side=THREE.DoubleSide);d&&(A.opacity=a.opacity,A.transparent=!0);if(b){var r=THREE.ImageUtils.loadTexture(a.texture,new THREE.UVMapping,function(){r.image=JSM.ResizeImageToPowerOfTwoSides(r.image);null!==c.textureLoadedCallback&&c.textureLoadedCallback()});r.wrapS=THREE.RepeatWrapping;r.wrapT=THREE.RepeatWrapping;
A.map=r}e.computeFaceNormals();a=new THREE.Mesh(e,A);f.push(a)},onTriangle:function(a,b,c,d,f,k,l,F,m){var q=e.vertices.length;e.vertices.push(new THREE.Vector3(a.x,a.y,a.z));e.vertices.push(new THREE.Vector3(b.x,b.y,b.z));e.vertices.push(new THREE.Vector3(c.x,c.y,c.z));a=new THREE.Face3(q+0,q+1,q+2);e.faces.push(a);null!==d&&(null!==f&&null!==k)&&(a=[],a.push(new THREE.Vector3(d.x,d.y,d.z)),a.push(new THREE.Vector3(f.x,f.y,f.z)),a.push(new THREE.Vector3(k.x,k.y,k.z)),e.faces[e.faces.length-1].vertexNormals=
a);null!==l&&(null!==F&&null!==m)&&(d=[],d.push(new THREE.Vector2(l.x,-l.y)),d.push(new THREE.Vector2(F.x,-F.y)),d.push(new THREE.Vector2(m.x,-m.y)),e.faceVertexUvs[0].push(d))}});return f};JSM.ConvertModelToThreeMeshes=function(a,b,d){var c=[],f=[],e,h;for(e=0;e<a.BodyCount();e++){f=a.GetBody(e);f=JSM.ConvertBodyToThreeMeshes(f,b,d);for(h=0;h<f.length;h++)c.push(f[h])}return c};
JSM.ConvertJSONDataToThreeMeshes=function(a,b,d){function c(a,c){function d(a){function q(a,b,c,d,e){c=new THREE.Vector2(a,b);JSM.IsZero(e)||(d=Math.sin(e*JSM.DegRad),e=Math.cos(e*JSM.DegRad),c.x=e*a-d*b,c.y=d*a+e*b);c.x=v[0]+c.x*w[0];c.y=v[1]+c.y*w[1];return c}var n=a.parameters,g=e[a.material];a=g.texture;var v=g.offset,w=g.scale,m=g.rotation,x=new THREE.Color,y=new THREE.Color,z=new THREE.Color,r=g.shininess;x.setRGB(g.ambient[0],g.ambient[1],g.ambient[2]);y.setRGB(g.diffuse[0],g.diffuse[1],g.diffuse[2]);
z.setRGB(g.specular[0],g.specular[1],g.specular[2]);if(void 0!==a&&null!==a){x.setRGB(1,1,1);y.setRGB(1,1,1);z.setRGB(1,1,1);if(void 0===v||null===v)v=[0,0];if(void 0===w||null===w)w=[1,1];if(void 0===m||null===m)m=0}x=new THREE.MeshPhongMaterial({ambient:y.getHex(),color:y.getHex(),specular:z.getHex(),shininess:r,side:THREE.DoubleSide});1!==g.opacity&&(x.opacity=g.opacity,x.transparent=!0);void 0!==a&&null!==a&&(g=THREE.ImageUtils.loadTexture(a,new THREE.UVMapping,function(a){a.image=JSM.ResizeImageToPowerOfTwoSides(a.image);
void 0!==b&&null!==b&&b()}),g.wrapS=THREE.RepeatWrapping,g.wrapT=THREE.RepeatWrapping,x.map=g);var g=new THREE.Geometry,t,s,B,u,C,D,E,G,p;for(p=0;p<n.length;p+=9)t=3*n[p+0],s=3*n[p+1],B=3*n[p+2],u=3*n[p+3],C=3*n[p+4],D=3*n[p+5],y=2*n[p+6],z=2*n[p+7],r=2*n[p+8],E=g.vertices.length,G=g.faces.length,g.vertices.push(new THREE.Vector3(k[t+0],k[t+1],k[t+2])),g.vertices.push(new THREE.Vector3(k[s+0],k[s+1],k[s+2])),g.vertices.push(new THREE.Vector3(k[B+0],k[B+1],k[B+2])),g.faces.push(new THREE.Face3(E+0,
E+1,E+2)),t=[],t.push(new THREE.Vector3(l[u+0],l[u+1],l[u+2])),t.push(new THREE.Vector3(l[C+0],l[C+1],l[C+2])),t.push(new THREE.Vector3(l[D+0],l[D+1],l[D+2])),g.faces[G].vertexNormals=t,void 0!==a&&null!==a&&(u=[],u.push(q(h[y+0],h[y+1],v,w,m)),u.push(q(h[z+0],h[z+1],v,w,m)),u.push(q(h[r+0],h[r+1],v,w,m)),g.faceVertexUvs[0].push(u));n=new THREE.Mesh(g,x);n.originalJsonIndex=c;f.push(n)}var k=a.vertices;if(void 0!==k){var l=a.normals;if(void 0!==l){var h=a.uvs;if(void 0!==h){var m=a.triangles,q;for(q=
0;q<m.length;q++)d(m[q])}}}}var f=[],e=a.materials;if(void 0===e)return f;var h=a.meshes;if(void 0===h)return f;var s=0;JSM.AsyncRunTask(function(){c(h[s],s);s+=1;return!0},d,h.length,0,f);return f};JSM.JSONFileConverter=function(a,b){this.onReady=a;this.onTextureLoaded=b};JSM.JSONFileConverter.prototype.Convert=function(a){(new JSM.JSONFileLoader(this.OnReady.bind(this))).Load(a)};
JSM.JSONFileConverter.prototype.OnReady=function(a){null!==this.onReady&&(a=JSM.ConvertJSONDataToThreeMeshes(a,this.onTextureLoaded),this.onReady(a))};JSM.ThreeViewer=function(){this.enableDraw=this.drawLoop=this.settings=this.navigation=this.cameraMove=this.runAfterRender=this.runBeforeRender=this.directionalLight=this.ambientLight=this.renderer=this.camera=this.scene=this.canvas=null};
JSM.ThreeViewer.prototype.Start=function(a,b){if(!JSM.IsWebGLEnabled()||!this.InitSettings(b)||!this.InitThree(a)||!this.InitCamera(b)||!this.InitLights())return!1;this.drawLoop=!1;this.enableDraw=!0;this.DrawIfNeeded();return!0};
JSM.ThreeViewer.prototype.InitSettings=function(a){this.settings={cameraEyePosition:new JSM.Coord(1,1,1),cameraCenterPosition:new JSM.Coord(0,0,0),cameraUpVector:new JSM.Coord(0,0,1),lightAmbientColor:[0.5,0.5,0.5],lightDiffuseColor:[0.5,0.5,0.5]};void 0!==a&&(void 0!==a.cameraEyePosition&&(this.settings.cameraEyePosition=JSM.CoordFromArray(a.cameraEyePosition)),void 0!==a.cameraCenterPosition&&(this.settings.cameraCenterPosition=JSM.CoordFromArray(a.cameraCenterPosition)),void 0!==a.cameraUpVector&&
(this.settings.cameraUpVector=JSM.CoordFromArray(a.cameraUpVector)),void 0!==a.lightAmbientColor&&(this.settings.lightAmbientColor=a.lightAmbientColor),void 0!==a.lightDiffuseColor&&(this.settings.lightDiffuseColor=a.lightDiffuseColor));return!0};
JSM.ThreeViewer.prototype.InitThree=function(a){this.canvas=a;if(!this.canvas||!this.canvas.getContext)return!1;this.scene=new THREE.Scene;if(!this.scene)return!1;this.renderer=new THREE.WebGLRenderer({canvas:this.canvas,antialias:!0});if(!this.renderer)return!1;this.renderer.setClearColor(new THREE.Color(16777215));this.renderer.setSize(this.canvas.width,this.canvas.height);return!0};
JSM.ThreeViewer.prototype.InitCamera=function(a){this.cameraMove=new JSM.Camera(JSM.CoordFromArray(a.cameraEyePosition),JSM.CoordFromArray(a.cameraCenterPosition),JSM.CoordFromArray(a.cameraUpVector),a.fieldOfView,a.nearClippingPlane,a.farClippingPlane);if(!this.cameraMove)return!1;this.navigation=new JSM.Navigation;if(!this.navigation.Init(this.canvas,this.cameraMove,this.DrawIfNeeded.bind(this),this.Resize.bind(this)))return!1;this.camera=new THREE.PerspectiveCamera(this.cameraMove.fieldOfView,
this.canvas.width/this.canvas.height,this.cameraMove.nearClippingPlane,this.cameraMove.farClippingPlane);if(!this.camera)return!1;this.scene.add(this.camera);return!0};
JSM.ThreeViewer.prototype.InitLights=function(){var a=new THREE.Color,b=new THREE.Color;a.setRGB(this.settings.lightAmbientColor[0],this.settings.lightAmbientColor[1],this.settings.lightAmbientColor[2]);b.setRGB(this.settings.lightDiffuseColor[0],this.settings.lightDiffuseColor[1],this.settings.lightDiffuseColor[2]);this.ambientLight=new THREE.AmbientLight(a.getHex());if(!this.ambientLight)return!1;this.scene.add(this.ambientLight);this.directionalLight=new THREE.DirectionalLight(b.getHex());if(!this.directionalLight)return!1;
a=(new THREE.Vector3).subVectors(this.cameraMove.eye,this.cameraMove.center);this.directionalLight.position.set(a.x,a.y,a.z);this.scene.add(this.directionalLight);return!0};JSM.ThreeViewer.prototype.SetRunBeforeRender=function(a){this.runBeforeRender=a};JSM.ThreeViewer.prototype.SetRunAfterRender=function(a){this.runAfterRender=a};JSM.ThreeViewer.prototype.SetClearColor=function(a){this.renderer.setClearColor(new THREE.Color(a));this.DrawIfNeeded()};
JSM.ThreeViewer.prototype.AddMesh=function(a){this.scene.add(a);this.DrawIfNeeded()};JSM.ThreeViewer.prototype.AddMeshes=function(a){var b;for(b=0;b<a.length;b++)this.scene.add(a[b]);this.DrawIfNeeded()};JSM.ThreeViewer.prototype.MeshCount=function(){var a=0;this.scene.traverse(function(b){b instanceof THREE.Mesh&&(a+=1)});return a};JSM.ThreeViewer.prototype.VertexCount=function(){var a=0;this.scene.traverse(function(b){b instanceof THREE.Mesh&&(a+=b.geometry.vertices.length)});return a};
JSM.ThreeViewer.prototype.FaceCount=function(){var a=0;this.scene.traverse(function(b){b instanceof THREE.Mesh&&(a+=b.geometry.faces.length)});return a};JSM.ThreeViewer.prototype.GetMesh=function(a){var b=null,d=0,c;for(c=0;c<this.scene.children.length;c++)if(b=this.scene.children[c],b instanceof THREE.Mesh){if(d==a)return b;d+=1}return null};JSM.ThreeViewer.prototype.RemoveMesh=function(a){this.scene.remove(a);this.DrawIfNeeded()};
JSM.ThreeViewer.prototype.RemoveMeshes=function(){var a,b;for(b=0;b<this.scene.children.length;b++)a=this.scene.children[b],a instanceof THREE.Mesh&&(this.scene.remove(a),b--);this.DrawIfNeeded()};JSM.ThreeViewer.prototype.RemoveLastMesh=function(){var a=null;this.scene.traverse(function(b){b instanceof THREE.Mesh&&(a=b)});null!==a&&this.scene.remove(a);this.DrawIfNeeded()};
JSM.ThreeViewer.prototype.SetCamera=function(a,b,d){this.navigation.SetCamera(a,b,d);this.navigation.SetOrbitCenter(b.Clone());this.DrawIfNeeded()};JSM.ThreeViewer.prototype.Resize=function(){this.camera.aspect=this.canvas.width/this.canvas.height;this.camera.updateProjectionMatrix();this.renderer.setSize(this.canvas.width,this.canvas.height);this.DrawIfNeeded()};
JSM.ThreeViewer.prototype.FitInWindow=function(){if(0!==this.MeshCount()){var a=this.GetBoundingSphere();this.navigation.FitInWindow(a.GetCenter(),a.GetRadius());this.DrawIfNeeded()}};JSM.ThreeViewer.prototype.AdjustClippingPlanes=function(a){this.GetBoundingSphere().GetRadius()<a?(this.camera.near=0.1,this.camera.far=1E3):(this.camera.near=10,this.camera.far=1E6);this.camera.updateProjectionMatrix();this.Draw()};JSM.ThreeViewer.prototype.GetCenter=function(){return this.GetBoundingBox().GetCenter()};
JSM.ThreeViewer.prototype.GetBoundingBox=function(){var a=new JSM.Coord(JSM.Inf,JSM.Inf,JSM.Inf),b=new JSM.Coord(-JSM.Inf,-JSM.Inf,-JSM.Inf),d,c;this.scene.traverse(function(f){if(f instanceof THREE.Mesh){d=f.geometry;var e;for(e=0;e<d.vertices.length;e++)c=d.vertices[e].clone(),c.add(f.position),a.x=JSM.Minimum(a.x,c.x),a.y=JSM.Minimum(a.y,c.y),a.z=JSM.Minimum(a.z,c.z),b.x=JSM.Maximum(b.x,c.x),b.y=JSM.Maximum(b.y,c.y),b.z=JSM.Maximum(b.z,c.z)}});return new JSM.Box(a,b)};
JSM.ThreeViewer.prototype.GetBoundingSphere=function(){var a=this.GetCenter(),b=0,d,c,f;this.scene.traverse(function(e){if(e instanceof THREE.Mesh){d=e.geometry;var h;for(h=0;h<d.vertices.length;h++)c=d.vertices[h].clone(),c.add(e.position),f=JSM.CoordDistance(a,new JSM.Coord(c.x,c.y,c.z)),JSM.IsGreater(f,b)&&(b=f)}});return new JSM.Sphere(a,b)};
JSM.ThreeViewer.prototype.GetObjectsUnderPosition=function(a,b){var d=2*(a/this.canvas.width)-1,c=2*-(b/this.canvas.height)+1,f=new THREE.Projector,e=this.camera.position,d=new THREE.Vector3(d,c,0.5);f.unprojectVector(d,this.camera);d.sub(e);d.normalize();return(new THREE.Raycaster(e,d)).intersectObjects(this.scene.children)};JSM.ThreeViewer.prototype.GetObjectsUnderMouse=function(){return this.GetObjectsUnderPosition(this.navigation.mouse.currX,this.navigation.mouse.currY)};
JSM.ThreeViewer.prototype.GetObjectsUnderTouch=function(){return this.GetObjectsUnderPosition(this.navigation.touch.currX,this.navigation.touch.currY)};JSM.ThreeViewer.prototype.ProjectVector=function(a,b,d){var c=this.canvas.width/2,f=this.canvas.height/2,e=new THREE.Projector;a=new THREE.Vector3(a,b,d);e.projectVector(a,this.camera);a.x=a.x*c+c;a.y=-(a.y*f)+f;return a};JSM.ThreeViewer.prototype.EnableDraw=function(a){this.enableDraw=a};
JSM.ThreeViewer.prototype.Draw=function(){if(this.enableDraw){null!==this.runBeforeRender&&this.runBeforeRender();this.camera.position.set(this.cameraMove.eye.x,this.cameraMove.eye.y,this.cameraMove.eye.z);this.camera.up.set(this.cameraMove.up.x,this.cameraMove.up.y,this.cameraMove.up.z);this.camera.lookAt(new THREE.Vector3(this.cameraMove.center.x,this.cameraMove.center.y,this.cameraMove.center.z));var a=(new THREE.Vector3).subVectors(this.cameraMove.eye,this.cameraMove.center);this.directionalLight.position.set(a.x,
a.y,a.z);this.renderer.render(this.scene,this.camera);null!==this.runAfterRender&&this.runAfterRender();this.drawLoop&&requestAnimationFrame(this.Draw.bind(this))}};JSM.ThreeViewer.prototype.DrawIfNeeded=function(){this.drawLoop||this.Draw()};JSM.ThreeViewer.prototype.StartDrawLoop=function(){this.drawLoop=!0;this.Draw()};
